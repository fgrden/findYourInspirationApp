{"version":3,"sources":["App.js","hooks/useResults.js","reportWebVitals.js","index.js"],"names":["App","apiKey","useState","results","errorMessage","setErrorMessage","searchApi","term","a","fetch","then","response","json","console","log","useEffect","useResults","resultsLatest","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAceA,MAXf,WAAgB,IAAD,ECDY,SAACC,GAAY,IAAD,EACLC,mBAAS,IADJ,mBAC5BC,EAD4B,aAEKD,mBAAS,KAFd,mBAE5BE,EAF4B,KAEdC,EAFc,KAK7BC,EAAS,uCAAG,WAAOC,GAAP,SAAAC,EAAA,wFAEHC,MAAMR,EAAOM,GACfG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAP,GACFU,QAAQC,IAAIX,OALV,gCASVE,EAAgB,wBATN,wDAAH,sDAmBf,OALAU,qBAAU,WACNT,EAAU,MACX,IAGI,CAACA,EAAWH,EAASC,GDtBqBY,CAAW,8DADjD,mBACOC,GADP,WAIb,OAJa,KAGbJ,QAAQC,IAAIG,GAEV,qBAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,kBEGTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9bce3670.chunk.js","sourcesContent":["import './App.css';\nimport { useResults } from './hooks'\n\nfunction App() {\n  const [searchLates, resultsLatest, errorMessage] = useResults('http://behance.net/v2/users/matiascorea?api_key=1234567890');\n\n  console.log(resultsLatest)\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\"></header>\n    </div>\n  );\n}\n\nexport default App;\n","import {useEffect, useState} from 'react'\r\n\r\nexport const useResults =  (apiKey) => {\r\n    const [results, setResults] = useState([])\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n\r\n    // Getting the values from api\r\n    const searchApi = async (term) => {\r\n        try {\r\n            return fetch(apiKey+term)\r\n                .then(response => response.json())\r\n                .then(results => {\r\n                    console.log(results)\r\n                    // setResults(results.projects)\r\n                })\r\n        } catch (err) {\r\n            setErrorMessage('Something went wrong')\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        searchApi('')\r\n    }, [])\r\n\r\n\r\n    return [searchApi, results, errorMessage]\r\n};\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}